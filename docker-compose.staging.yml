version: '3.8'

services:
  web:
    build: .
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - FLASK_ENV=${FLASK_ENV:-staging}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/pos_db}
      - SW_URL=${SW_URL}
      - SW_TOKEN=${SW_TOKEN}
      - SAT_RFC=${SAT_RFC}
      - SAT_NOMBRE=${SAT_NOMBRE}
      - SAT_REGIMEN_FISCAL=${SAT_REGIMEN_FISCAL}
      - SAT_CP=${SAT_CP}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - MAX_WORKERS=${MAX_WORKERS:-4}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    environment:
      - POSTGRES_DB=${DB_NAME:-pos_db}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./static:/usr/share/nginx/html/static
    depends_on:
      - web
    restart: always

volumes:
  postgres_data:
  
networks:
  default:
    driver: bridge
